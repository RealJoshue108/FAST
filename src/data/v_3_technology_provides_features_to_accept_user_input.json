{
    principle: {
      handle: "FAST Checklist",
      text:
        "If technology provides features to accept user input.",
      num: "Input.1",
    },
    guidelines: [
      {
        id: "mechanism-users-label-input",
        num: "Input.1.1",
        handle: "There is a mechanism to label user input controls in an unambiguous and clear manner.",
        text:
          "When collecting user input, users must know what input is required for each control.",
        successcriteria: [
          {
            id: "mechanism-users-label-input",
            num: "Input.1.1",
            handle: " ",
            text:
              "Often this is made evident by visual context, but this does not help non-visual users or users of alternate visual presentations such as magnification. When labels are provided, if they are not programmatically associated with the control, users may not be able to find the correct label. Therefore it is important for technologies to provide ways to associate labels with their controls.",
            level:
              " ",
          },
        ],
      },
      {
        id: "extended-help",
        handle: "Authors can associate extended help information with a control.",
        text:
          "When authors request user input that may require special assistance, such as details of the input format required or how to find an account number on a bill, they may provide extended help in addition to the label.",
        num: "Input.1.2",
        successcriteria: [
          {
            id: "extended-help",
            num: "Input.1.2",
            handle: " ",
            text:
              "Even if this is positioned near the control, some users may not reliably find it. Therefore technologies should provide a way for authors to explicitly attach extended help (including links to extended help) directly to the control.",
            level: " ",
            details: [
              {
                type: "note",
                handle: "Note 13",
                text:
                  "Here is some more about this FAST checkpoint.",
              },
            ],
          },
        ],
      },
      {
        id: "input-error-association",
        handle: "If a user inputs data that is not accepted by the system, a report of the issue is made and the user given an opportunity to correct the input.",
        text:
          "Such error messages are frequently provided at the top of the form, from where it can be difficult for the user to locate the control that needs input corrected.",
        num: "Input.1.3",
        successcriteria: [
          {
            id: "input-error-association",
            num: "Input.1.3",
            handle: " ",
            text:
              "Even if the error message is positioned closer to the control, it can be difficult to find the correct control. Therefore, much like labels and help content, technologies need to provide a way to associate error messages directly with the control to which they apply.",
            level: " ",
            details: [
              {
                type: "note",
                handle: "Note 14",
                text:
                  "For more on accessible error messaging and error recovery, see WCAG.",
              },
            ],
          },
        ],
      },
      {
        id: "reporting-mechanism",
        handle: "There is a mechanism to report and set the state or value of controls programmatically.",
        text:
          "While much user input is collected using platform input services, some users use assistive technologies that work better when interacting programmatically with the content directly, effectively in an alternate user interface.",
        num: "Input.1.4",
        successcriteria: [
          {
            id: "reporting-mechanism",
            num: "Input.1.4",
            handle: " ",
            text:
              "For this to work, technologies need to provide a means for assistive technologies to get and set the nature, state, and value of input controls.",
            level: " ",
            details: [
              {
                type: "note",
                handle: "Note 15",
                text:
                  "See more about accessible input controls.",
              },
            ],
          },
        ],
      },
      {
        id: "multiple-inputs",
        handle: "Authors can address multiple types of input hardware (keyboard, pointing device, touch screen, voice recognition, etc.), or the technology supports hardware-agnostic input methods.",
        text:
          "A basic tenet of accessibility is that users should be able to user input and output hardware that is optimal for them.",
        num: "Input.1.5",
        successcriteria: [
          {
            id: "multiple-inputs",
            num: "Input.1.5",
            handle: " ",
            text:
              "Some use alternate versions of familiar hardware, such as keyboard-compatible and pointing devices, while others use less widespread types of hardware, such as voice recognition, single-switch devices, Braille displays, etc. ",
            level: " ",
            details: [
              {
                type: "note",
                handle: "Note 16",
                text:
                  "Technologies should design content input and output methods to be agnostic to the specific hardware used, and provide application programming interfaces for supported hardware types such as keyboard and pointer so other hardware can effectively interact. Technologies should also emphasize the most hardware-neutral form of authoring feasible via more abstract events, and when providing hardware-specific features ensure that multiple types of hardware can be addressed.",
              },
            ],
          },
        ],
      },
      {
        id: "agnostic-input",
        handle: "Some user input depends on specific physical characteristics of users.",
        text:
          " For instance, early touch screens required users to have a physical, not a prosthetic, finger, and fingerprint readers also require users to have a fingerprint. Some users do not have the ability to interact with such devices.",
        num: "Input.1.6",
        successcriteria: [
          {
            id: "agnostic-input",
            num: "Input.1.6",
            handle: " ",
            text:
              "Technologies should not require specific user characteristics, and should provide alternate ways to accomplish tasks if such features are provided.",
            level: " ",
            details: [
              {
                type: "note",
                handle: "Note 17",
                text:
                  "See more for device independence and personalisation of inputs.",
              },
           ],
          },
        ],
      },
      {
        id: "meaningful-order",
        handle: "Authors can ensure a \"meaningful\" order of controls exists regardless of presentation.",
        text:
          "Much like the issue of navigation order deviating from display order mentioned above, control order is another frequent source of confusion for users when presentation has been customized.",
        num: "Input.1.6",
        successcriteria: [
          {
            id: "meaningful-order",
            num: "Input.1.6",
            handle: " ",
            text:
              "Technologies should provide ways for authors to define the intended order of user input controls.",
            level: " ",
            details: [
              {
                type: "note",
                handle: "Note 18",
                text:
                  "See more for the importance of meaningful order.",
              },
           ],
          },
        ],
      },
    ],
  },
];